name: Build and Deploy

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: read

jobs:
  build-and-push:
    name: Build and push Docker image
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout Code
      - name: Checkout code
        uses: actions/checkout@v4.2.2

      # Step 2: Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Step 3: Setup Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Step 4: Build Docker Image
      - name: Build Docker Image
        run: |
          docker buildx build --platform linux/amd64 -t ${{ secrets.DOCKER_USERNAME }}/my-app:latest -t ${{ secrets.DOCKER_USERNAME }}/my-app:${{ github.run_id }} --push .

      # Step 5: Push Docker Image with Both Tags (Not needed if pushing via buildx)
      # - name: Push Docker Image
      #   run: |
      #     docker push ${{ secrets.DOCKER_USERNAME }}/my-app:latest
      #     docker push ${{ secrets.DOCKER_USERNAME }}/my-app:${{ github.run_id }}

  deploy-self:
    name: Deploy Docker Image on Self-Hosted
    needs: build-and-push 
    runs-on: pi5
  
    steps:
      # Step 1: Checkout Code
      - name: Checkout code
        uses: actions/checkout@v4.2.2
      # Step 2: Modify PATH
      - name: Add /usr/bin to PATH
        run: echo "::add-path::/usr/bin"
      # Step 3: Pull and Deploy Docker Image
      - name: Deploy Docker Image
        run: |
          docker pull ${{ secrets.DOCKER_USERNAME }}/my-app:latest
          docker stop $(docker ps -a -q --filter ancestor=${{ secrets.DOCKER_USERNAME }}/my-app) || true
          docker rm $(docker ps -a -q --filter ancestor=${{ secrets.DOCKER_USERNAME }}/my-app) || true
          docker run -d -p 80:80 --name my-container ${{ secrets.DOCKER_USERNAME }}/my-app:latest
  deploy-ubuntu:
    name: Deploy Docker Image on Ubuntu
    needs: build-and-push 
    runs-on: ubuntu-latest
    
    steps:
      # Step 1: Checkout Code
      - name: Checkout code
        uses: actions/checkout@v4.2.2
      # Step 2: Pull and Deploy Docker Image
      - name: Deploy Docker Image
        run: |
          docker pull ${{ secrets.DOCKER_USERNAME }}/my-app:latest
          docker run -d -p 80:80 ${{ secrets.DOCKER_USERNAME }}/my-app:latest
